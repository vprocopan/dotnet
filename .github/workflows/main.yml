name: 🚀 Docker Build, Push & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:

  build:
    name: 🛠️ Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🧠 Set image tag
        id: set_tag
        run: echo "image_tag=build-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: 🔐 Login to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏗️ Build Docker image
        run: docker build -t vprocopan/dotnet:build-${{ github.run_number }} .

      - name: 📤 Push Docker image
        run: docker push vprocopan/dotnet:build-${{ github.run_number }}


  update-manifest:
    name: 📝 Update K8s Manifest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ✏️ Update image tag in Kubernetes manifest
        run: sed -i "s|REPLACE_IMAGE_TAG|${{ needs.build.outputs.image_tag }}|g" k8s/deployment.yaml

      - name: ✅ Commit & push
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add k8s/deployment.yaml
          git commit -m "Update image tag to ${{ needs.build.outputs.image_tag }}" || echo "Nothing to commit"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          git push origin HEAD:main


  deploy:
    name: 🚀 Sync ArgoCD App
    runs-on: ubuntu-latest
    needs: update-manifest
    steps:
      - name: 📦 Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: 🔐 Login & Sync
        run: |
          argocd login argo.procopan.md --username admin --password "${{ secrets.ARGOCD_PASSWORD }}" --insecure
          argocd app sync dotnet-app --force
